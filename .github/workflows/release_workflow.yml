name: CI/CD Release Workflow

on:
  release:
    types: [published]

jobs:
  publish-docs:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-publish-docs
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      # Using pip for Sphinx dependencies because it takes too long to reproduce a conda environment (~10 secs vs. 3-4 mins)
      # Low risk trade-off with mismatching dependencies in `conda/zstash_dev.yml`
      - name: Install Dependencies
        run: |
          pip install sphinx==3.5.1 sphinx_rtd_theme==0.5.1 sphinx-multiversion==0.2.4 docutils==0.16 "jinja2<3.1"

      - name: Build Sphinx Docs
        run: |
          cd docs
          sphinx-multiversion source _build/html

      - name: Copy Docs and Commit
        run: |
          # gh-pages branch must already exist
          git clone https://github.com/E3SM-Project/zstash.git --branch gh-pages --single-branch gh-pages

	  # Make sure we're in the gh-pages directory.
	  cd gh-pages

          # Create `.nojekyll` (if it doesn't already exist) for proper GH Pages configuration.
          touch .nojekyll

          # Add `index.html` to point to the `main` branch automatically.
          printf '<meta http-equiv="refresh" content="0; url=./_build/html/main/index.html" />' > index.html

          # Only replace `main` docs with latest changes. Docs for tags should be untouched.
          rm -rf _build/html/main
          mkdir -p _build/html/main
          cp -r ../docs/_build/html/main _build/html

          # Configure git using GitHub Actions credentials.
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          # The below command will fail if no changes were present, so we ignore it
          git add .
          git commit -m "Update documentation" -a || true

      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          branch: gh-pages
          directory: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true

  publish-to-anaconda:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2

      - name: Cache Conda
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if conda/zstash_dev.yml has not changed in the workflow
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-publish

      - name: Set up Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: "zstash_publishing"
          channel-priority: strict
          python-version: 3.7
          auto-update-conda: true
          # IMPORTANT: This needs to be set for caching to work properly!
          use-only-tar-bz2: true

      - name: Additional Conda Config
        run: |
          conda install anaconda-client conda-build conda-verify
          conda config --set anaconda_upload no

      - name: Build Conda Package
        run: conda build -c conda-forge --output-folder . .

      - name: Publish to Anaconda (e3sm channel)
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          label="main"

          for file in noarch/*.tar.bz2; do
            if [[ "$file" == noarch/*"rc"*.tar.bz2 ]]; then
               label="e3sm_dev"
            fi
          done

          echo Uploading to conda-forge with \'$label\' label
          anaconda upload --label $label noarch/*.tar.bz2 --force
